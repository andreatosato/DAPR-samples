admin:
  access_log_path: "/dev/null"
  profile_path: /tmp/envoy.prof
  address:
    socket_address: 
        address: 0.0.0.0
        port_value: 9901 
static_resources:
  listeners:
    - name: listener_0
      address:
          socket_address: 
            address: 0.0.0.0
            port_value: 10000
      filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              generate_request_id: true
              tracing:
                provider:
                  name: envoy.tracers.zipkin
                  typed_config:
                    "@type": type.googleapis.com/envoy.config.trace.v3.ZipkinConfig
                    collector_cluster: zipkin
                    collector_endpoint: "/api/v2/spans"
                    collector_endpoint_version: HTTP_JSON
              stat_prefix: ingress_http
              codec_type: AUTO
              route_config:
                name: dapr_sample
                virtual_hosts:
                - name: dapr_backend
                  domains: ["*"]
                  cors:
                    allow_origin_string_match:
                    - safe_regex:
                        google_re2: {}
                        regex: \*
                    allow_methods: "GET, POST, PUT"
                    allow_headers: "authorization, content-type, x-requestid, x-requested-with"
                    allow_credentials: true
                  routes:
                  - name: "c-short"
                    match:
                        prefix: "/c/"
                    route:
                        auto_host_rewrite: true
                        prefix_rewrite: "/v1.0/invoke/catalog-api/method/"
                        cluster: dapr
                  
                  - name: "c-long"
                    match:
                       prefix: "/catalog-api/"
                    route:
                       auto_host_rewrite: true
                       prefix_rewrite: "/v1.0/invoke/catalog-api/method/"
                       cluster: dapr

              http_filters:
                - name: envoy.filters.http.router
                  typed_config: {}
              #access_log:
              #  - name: envoy.file_access_log


            #config:
            #    json_format:
            #        time: "%START_TIME%"
            #        protocol: "%PROTOCOL%"
            #        duration: "%DURATION%"
            #        request_method: "%REQ(:METHOD)%"
            #        request_host: "%REQ(HOST)%"
            #        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
            #        response_flags: "%RESPONSE_FLAGS%"
            #        route_name: "%ROUTE_NAME%"
            #        upstream_host: "%UPSTREAM_HOST%"
            #        upstream_cluster: "%UPSTREAM_CLUSTER%"
            #        upstream_local_address: "%UPSTREAM_LOCAL_ADDRESS%"
            #    path: "/tmp/access.log"

#- address:
#    socket_address:
#        address: 0.0.0.0
#        port_value: 80
#    filter_chains:
#    - filters:
#        - name: envoy.http_connection_manager
#          config:
#            codec_type: auto
#            stat_prefix: ingress_http
#            route_config:
#                name: eshop_backend_route
#                virtual_hosts:
#                - name: eshop_backend
#                domains:
#                - "*"
#                cors:
#                    allow_origin_string_match:
#                    - safe_regex:
#                        google_re2: {}
#                        regex: \*
#                    allow_methods: "GET, POST, PUT"
#                    allow_headers: "authorization, content-type, x-requestid, x-requested-with"
#                    allow_credentials: true
#                routes:
                    # - name: "pics"
                    #   match:
                    #     safe_regex:
                    #       google_re2: {}
                    #       regex: "\/c\/api\/v1\/catalog\/items\/(\\d+)\/pic\/"
                    #   route:
                    #     auto_host_rewrite: true
                    #     regex_rewrite:
                    #       pattern:
                    #         google_re2: {}
                    #         regex: "\/c\/api\/v1\/catalog\/items\/(\\d+)\/pic\/"
                    #       substitution: "/catalog-api/api/v1/catalog/items/\\1/pic/"
                    #     cluster: catalog


                    #- name: "c-short"
                    #  match:
                    #    prefix: "/c/"
                    #  route:
                    #    auto_host_rewrite: true
                    #    prefix_rewrite: "/v1.0/invoke/catalog-api/method/"
                    #    cluster: dapr
                    #- name: "c-long"
                    #  match:
                    #     prefix: "/catalog-api/"
                    #  route:
                    #     auto_host_rewrite: true
                    #     prefix_rewrite: "/v1.0/invoke/catalog-api/method/"
                    #     cluster: dapr


                #- name: "o-short"
                #  match:
                #    prefix: "/o/"
                #  route:
                #    auto_host_rewrite: true
                #    prefix_rewrite: "/v1.0/invoke/ordering-api/method/"
                #    cluster: dapr
                #- name: "o-long"
                #  match:
                #    prefix: "/ordering-api/"
                #  route:
                #    auto_host_rewrite: true
                #    prefix_rewrite: "/v1.0/invoke/ordering-api/method/"
                #    cluster: dapr
                # - name: "h-long"
                #   match:
                #     prefix: "/hub/notificationhub"
                #   route:
                #     auto_host_rewrite: true
                #     cluster: ordering-api
                #     timeout: 300s
                #- name: "agg"
                #  match:
                #    prefix: "/"
                #  route:
                #    auto_host_rewrite: true
                #    prefix_rewrite: "/v1.0/invoke/webshoppingagg/method/"
                #    cluster: dapr
    
    #http_filters:
    #- name: envoy.cors
    #- name: envoy.router
    #access_log:
    #- name: envoy.file_access_log
    #filter:
    #    not_health_check_filter: {}
    #config:
    #    json_format:
    #        time: "%START_TIME%"
    #        protocol: "%PROTOCOL%"
    #        duration: "%DURATION%"
    #        request_method: "%REQ(:METHOD)%"
    #        request_host: "%REQ(HOST)%"
    #        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
    #        response_flags: "%RESPONSE_FLAGS%"
    #        route_name: "%ROUTE_NAME%"
    #        upstream_host: "%UPSTREAM_HOST%"
    #        upstream_cluster: "%UPSTREAM_CLUSTER%"
    #        upstream_local_address: "%UPSTREAM_LOCAL_ADDRESS%"
    #    path: "/tmp/access.log"
  clusters:
    - name: dapr
      connect_timeout: 1s
      type: STATIC
      lb_policy: ROUND_ROBIN
      http2_protocol_options: {}
      load_assignment:
        cluster_name: dapr
        endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                    socket_address:
                        address: 127.0.0.1
                        port_value: 3500
    - name: zipkin
      connect_timeout: 1s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: zipkin
        endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                    socket_address:
                        address: zipkin
                        port_value: 9411
#- name: catalog
#  connect_timeout: 0.25s
#  type: strict_dns
#  lb_policy: round_robin 
#  hosts:
#  - socket_address:
#    address: catalog-api
#    port_value: 80
#- name: order
#  connect_timeout: 0.25s
#  type: strict_dns
#  lb_policy: round_robin
#  hosts:
#  - socket_address:
#      address: order-api
#      port_value: 80